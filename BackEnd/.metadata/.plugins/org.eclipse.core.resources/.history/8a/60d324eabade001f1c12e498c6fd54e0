package com.ssafy.scentify.schedule.model.entity;

import java.sql.*;
import lombok.*;

@Getter
@ToString
@NoArgsConstructor
@AllArgsConstructor
public class AutoSchedule {
    private Integer id;
    private int deviceId;
    private String userId;
    private int combinationId;
    private int subMode;
    private int type;
    private int interval;
    private Boolean modeOn;
    private Timestamp createdAt;
    private Timestamp updatedAt;
    
    public void setUserId(String userId) {
        if (userId == null || userId.isBlank() || userId.contains(" ") || userId.length() > 30) {
            throw new IllegalArgumentException("userId 입력값이 형식에 맞지 않습니다.");
        }
        this.userId = userId;
    }

    public void setDeviceId(int deviceId) {
        if (deviceId < 0) {
            throw new IllegalArgumentException("deviceId는 0 이상이어야 합니다.");
        }
        this.deviceId = deviceId;
    }

    public void setCombinationId(int combinationId) {
        if (combinationId < 0) {
            throw new IllegalArgumentException("combinationId는 0 이상이어야 합니다.");
        }
        this.combinationId = combinationId;
    }

    public void setSubMode(int subMode) {
        if (subMode < 0 || subMode > 2) {
            throw new IllegalArgumentException("subMode 값이 잘못되었습니다. (0~2 범위여야 함)");
        }
        this.subMode = subMode;
    }

    public void setType(Integer type) {
        if (type != null && type != 0 && type != 1) {
            throw new IllegalArgumentException("type은 null, 0 또는 1만 허용됩니다.");
        }
        this.type = type;
    }

    public void setInterval(int interval) {
        if (interval < 0) {
            throw new IllegalArgumentException("interval은 0 이상이어야 합니다.");
        }
        this.interval = interval;
    }

    public void setModeOn(Boolean modeOn) {
        if (modeOn == null) {
            throw new IllegalArgumentException("modeOn 값이 null일 수 없습니다.");
        }
        this.modeOn = modeOn;
    }
}
}