package com.ssafy.scentify.schedule.model.repository;

import java.util.List;

import org.apache.ibatis.annotations.*;
import com.ssafy.scentify.home.model.dto.HomeDto.CustomScheduleHomeDto;
import com.ssafy.scentify.schedule.model.dto.CustomScheduleDto;

@Mapper
public interface CustomScheduleRepository {
	
	// 디바이스 아이디로 스케줄 조회
	@Select("SELECT id, name, combination_id, combination_name, is_favorite, day, start_time, end_time, `interval`, mode_on "
	          + "FROM customschedule WHERE device_id = #{deviceId}")
    @Results({
        @Result(column = "id", property = "id"),
        @Result(column = "name", property = "name"),
        @Result(column = "combination_id", property = "combinationId"),
        @Result(column = "combination_name", property = "combinationName"),
        @Result(column = "is_favorite", property = "isFavorite"),
        @Result(column = "day", property = "day"),
        @Result(column = "start_time", property = "startTime"),
        @Result(column = "end_time", property = "endTime"),
        @Result(column = "interval", property = "interval"),
        @Result(column = "mode_on", property = "modeOn")
    })
    List<CustomScheduleHomeDto> getSchedulesByDeviceId(int deviceId);
	
	// 커스텀 스케줄 생성
	@Insert("INSERT INTO customschedule (name, device_id, combination_id, combination_name, day, start_time, end_time, `interval`, mode_on, created_at, updated_at)" 
		    + " VALUES (#{customSchedule.name}, #{customSchedule.deviceId}, #{combinationId}, #{conbinationName}, #{customSchedule.day},"
			+ " #{customSchedule.startTime}, #{customSchedule.endTime}, #{customSchedule.interval}, #{customSchedule.modeOn}, NOW(), NOW())")
	boolean createCustomSchedule(@Param("customSchedule") CustomScheduleDto customScheduleDto, Integer combinationId, String conbinationName);
	
	// 커스텀 스케줄 수정
	@Update("UPDATE customschedule SET name = #{customSchedule.name}, combination_id = #{combinationId}, combination_name = CASE WHEN #{combinationName} IS NOT NULL "
			+ "THEN #{combinationName} ELSE combination_name END, day = #{customSchedule.day}, start_time = #{customSchedule.startTime}, end_time = #{customSchedule.endTime}, "
			+ "`interval` = #{customSchedule.interval}, mode_on = #{customSchedule.modeOn}, updated_at = NOW() WHERE id = #{customSchedule.id} AND device_id = #{customSchedule.deviceId}")
	boolean updateCustomSchedule(@Param("customSchedule") CustomScheduleDto customScheduleDto, Integer combinationId, String combinationName);

	boolean deleteCustomScheduleById(Integer customScheduleId, Integer deviceId);
}
