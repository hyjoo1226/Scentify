package com.ssafy.scentify.model.repository;

import java.sql.Date;

import org.apache.ibatis.annotations.*;

import com.ssafy.scentify.model.dto.UserDto.SocialLoginDto;
import com.ssafy.scentify.model.dto.UserDto.UserInfoDto;
import com.ssafy.scentify.model.entity.User;

@Mapper
public interface UserRepository {
    // ID 존재 여부 확인
    @Select("SELECT COUNT(*) > 0 FROM user WHERE id = #{id}")
    boolean existsById(String id);

    // 이메일 존재 여부 확인
    @Select("SELECT COUNT(*) > 0 FROM user WHERE email = #{email}")
    boolean existsByEmail(String email);
    
    // 유저 생성
    @Insert("INSERT INTO User (id, password, nickname, email, img_num, social_type, gender, birth)"
    		+ "VALUES (#{id}, #{password}, #{nickname}, #{email}, #{imgNum}, #{socialType}, #{gender}, #{birth})")
	boolean createUser(User user);
    
    // id로 유저 비밀번호 찾기
    @Select("SELECT password FROM user WHERE id = #{id}")
	String getUserPasswordById(String id);
    
    // email로 유저 id 가져오기
    @Select("SELECT id, social_type FROM user WHERE email = #{email}")
    SocialLoginDto getSocialUserInfoByEmail(String email);
    
    // id로 유저 성별과 생년월일 가져오기
	@Select("SELECT gender, birth FROM user WHERE id = #{id}")
    UserInfoDto getUserInfoById(String id);
	
	// id에 해당하는 유저의 nickName 업데이트
	@Update("UPDATE user SET nickname = #{nickname} WHERE id = #{id}")
	boolean updateUserNickName(String id, String nickname);

	boolean updateUserInfo(String userId, UserInfoDto userInfoDto);
}
